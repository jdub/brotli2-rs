var searchIndex = {};
searchIndex["brotli2"] = {"doc":"Brotli Compression/Decompression for Rust","items":[[3,"CompressParams","brotli2","Parameters passed to various compression routines.",null,null],[4,"CompressMode","","Possible choices for modes of compression",null,null],[13,"Generic","","Default compression mode, the compressor does not know anything in advance about the properties of the input.",0,null],[13,"Text","","Compression mode for utf-8 formatted text input.",0,null],[13,"Font","","Compression mode in WOFF 2.0.",0,null],[0,"raw","","Raw interface to in-memory compression/decompression streams",null,null],[3,"Decompress","brotli2::raw","In-memory state for decompressing brotli-encoded data.",null,null],[3,"Compress","","In-memory state for compressing/encoding data with brotli",null,null],[3,"Error","","Error that can happen from decompressing or compressing a brotli stream.",null,null],[4,"CompressOp","","Possible choices for the operation performed by the compressor.",null,null],[13,"Process","","Compress input data",1,null],[13,"Flush","","Compress input data, ensuring that all input so far has been written out",1,null],[13,"Finish","","Compress input data, ensuring that all input so far has been written out and then finalizing the stream so no more data can be written",1,null],[13,"EmitMetadata","","Emit a metadata block to the stream, an opaque piece of out-of-band data that does not interfere with the main stream of data. Metadata blocks must be no longer than 16MiB",1,null],[4,"CoStatus","","Indication of whether a compression operation is 'complete'. This does not indicate whether the whole stream is complete - see `Compress::compress` for details.",null,null],[13,"Finished","","The operation completed successfully",2,null],[13,"Unfinished","","The operation has more work to do and needs to be called again with the same buffer",2,null],[4,"DeStatus","","Possible status results returned from decompressing.",null,null],[13,"Finished","","Decompression was successful and has finished",3,null],[13,"NeedInput","","More input is needed to continue",3,null],[13,"NeedOutput","","More output is needed to continue",3,null],[5,"decompress_buf","","Decompress data in one go in memory.",null,null],[5,"compress_buf","","Compresses the data in `input` into `output`.",null,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"compressop"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"compressop"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"costatus"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"costatus"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"destatus"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"destatus"}],"output":{"name":"bool"}}],[11,"new","","Creates a new brotli decompression/decoding stream ready to receive data.",5,{"inputs":[],"output":{"name":"decompress"}}],[11,"decompress","","Decompress some input data and write it to a buffer of output data.",5,null],[11,"take_output","","Retrieve a slice of the internal decompressor buffer up to `size_limit` in length (unlimited length if `None`), consuming it. As the internal buffer may not be contiguous, consecutive calls may return more output until this function returns `None`.",5,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"option"}}],[11,"drop","","",5,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Creates a new compressor ready to encode data into brotli",6,{"inputs":[],"output":{"name":"compress"}}],[11,"compress","","Pass some input data to the compressor and write it to a buffer of output data, compressing or otherwise handling it as instructed by the specified operation.",6,null],[11,"take_output","","Retrieve a slice of the internal compressor buffer up to `size_limit` in length (unlimited length if `None`), consuming it. As the internal buffer may not be contiguous, consecutive calls may return more output until this function returns `None`.",6,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"option"}}],[11,"set_params","","Configure the parameters of this compression session.",6,{"inputs":[{"name":"self"},{"name":"compressparams"}],"output":null}],[11,"drop","","",6,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",4,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[0,"bufread","brotli2","I/O streams for wrapping `BufRead` types as encoders/decoders",null,null],[3,"BrotliEncoder","brotli2::bufread","A brotli encoder, or compressor.",null,null],[3,"BrotliDecoder","","A brotli decoder, or decompressor.",null,null],[11,"new","","Creates a new encoder which will read uncompressed data from the given stream and emit the compressed stream.",7,{"inputs":[{"name":"r"},{"name":"u32"}],"output":{"name":"brotliencoder"}}],[11,"from_params","","Creates a new encoder with a custom `CompressParams`.",7,{"inputs":[{"name":"r"},{"name":"compressparams"}],"output":{"name":"brotliencoder"}}],[11,"get_ref","","Acquires a reference to the underlying stream",7,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream",7,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",7,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"read","","",7,null],[11,"new","","Creates a new decoder which will decompress data read from the given stream.",8,{"inputs":[{"name":"r"}],"output":{"name":"brotlidecoder"}}],[11,"get_ref","","Acquires a reference to the underlying stream",8,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream",8,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",8,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"read","","",8,null],[0,"read","brotli2","Reader-based compression/decompression streams",null,null],[3,"BrotliEncoder","brotli2::read","A compression stream which wraps an uncompressed stream of data. Compressed data will be read from the stream.",null,null],[3,"BrotliDecoder","","A decompression stream which wraps a compressed stream of data. Decompressed data will be read from the stream.",null,null],[11,"new","","Create a new compression stream which will compress at the given level to read compress output to the give output stream.",9,{"inputs":[{"name":"r"},{"name":"u32"}],"output":{"name":"brotliencoder"}}],[11,"from_params","","Configure the compression parameters of this encoder.",9,{"inputs":[{"name":"r"},{"name":"compressparams"}],"output":{"name":"brotliencoder"}}],[11,"get_ref","","Acquires a reference to the underlying stream",9,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream",9,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"into_inner","","Unwrap the underlying writer, finishing the compression stream.",9,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"read","","",9,null],[11,"new","","Create a new decompression stream, which will read compressed data from the given input stream and decompress it.",10,{"inputs":[{"name":"r"}],"output":{"name":"brotlidecoder"}}],[11,"get_ref","","Acquires a reference to the underlying stream",10,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream",10,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"into_inner","","Unwrap the underlying writer, finishing the compression stream.",10,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"read","","",10,null],[0,"write","brotli2","Writer-based compression/decompression streams",null,null],[3,"BrotliEncoder","brotli2::write","A compression stream which will have uncompressed data written to it and will write compressed data to an output stream.",null,null],[3,"BrotliDecoder","","A compression stream which will have compressed data written to it and will write uncompressed data to an output stream.",null,null],[11,"new","","Create a new compression stream which will compress at the given level to write compress output to the give output stream.",11,{"inputs":[{"name":"w"},{"name":"u32"}],"output":{"name":"brotliencoder"}}],[11,"from_params","","Creates a new encoder with a custom `CompressParams`.",11,{"inputs":[{"name":"w"},{"name":"compressparams"}],"output":{"name":"brotliencoder"}}],[11,"finish","","Consumes this encoder, flushing the output stream.",11,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"write","","",11,null],[11,"flush","","",11,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"drop","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Creates a new decoding stream which will decode all input written to it into `obj`.",12,{"inputs":[{"name":"w"}],"output":{"name":"brotlidecoder"}}],[11,"finish","","Unwrap the underlying writer, finishing the compression stream.",12,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"write","","",12,null],[11,"flush","","",12,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"drop","","",12,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","brotli2","",0,{"inputs":[{"name":"self"}],"output":{"name":"compressmode"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"compressmode"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"compressparams"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new default set of compression parameters.",13,{"inputs":[],"output":{"name":"compressparams"}}],[11,"mode","","Set the mode of this compression.",13,{"inputs":[{"name":"self"},{"name":"compressmode"}],"output":{"name":"compressparams"}}],[11,"quality","","Controls the compression-speed vs compression-density tradeoffs.",13,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"compressparams"}}],[11,"lgwin","","Sets the base 2 logarithm of the sliding window size.",13,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"compressparams"}}],[11,"lgblock","","Sets the base 2 logarithm of the maximum input block size.",13,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"compressparams"}}],[11,"get_lgblock_readable","","Get the current block size",13,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"get_lgblock","","Get the native lgblock size",13,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_lgwin_readable","","Get the current window size",13,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"get_lgwin","","Get the native lgwin value",13,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}]],"paths":[[4,"CompressMode"],[4,"CompressOp"],[4,"CoStatus"],[4,"DeStatus"],[3,"Error"],[3,"Decompress"],[3,"Compress"],[3,"BrotliEncoder"],[3,"BrotliDecoder"],[3,"BrotliEncoder"],[3,"BrotliDecoder"],[3,"BrotliEncoder"],[3,"BrotliDecoder"],[3,"CompressParams"]]};
searchIndex["brotli_sys"] = {"doc":"","items":[[4,"BrotliDecoderState","brotli_sys","",null,null],[4,"BrotliEncoderState","","",null,null],[5,"BrotliDecoderCreateInstance","","",null,null],[5,"BrotliDecoderDestroyInstance","","",null,null],[5,"BrotliDecoderDecompress","","",null,null],[5,"BrotliDecoderDecompressStream","","",null,null],[5,"BrotliDecoderSetCustomDictionary","","",null,null],[5,"BrotliDecoderHasMoreOutput","","",null,null],[5,"BrotliDecoderTakeOutput","","",null,null],[5,"BrotliDecoderIsUsed","","",null,null],[5,"BrotliDecoderIsFinished","","",null,null],[5,"BrotliDecoderGetErrorCode","","",null,null],[5,"BrotliDecoderErrorString","","",null,null],[5,"BrotliDecoderVersion","","",null,null],[5,"BrotliEncoderSetParameter","","",null,null],[5,"BrotliEncoderCreateInstance","","",null,null],[5,"BrotliEncoderDestroyInstance","","",null,null],[5,"BrotliEncoderSetCustomDictionary","","",null,null],[5,"BrotliEncoderMaxCompressedSize","","",null,null],[5,"BrotliEncoderCompress","","",null,null],[5,"BrotliEncoderCompressStream","","",null,null],[5,"BrotliEncoderIsFinished","","",null,null],[5,"BrotliEncoderHasMoreOutput","","",null,null],[5,"BrotliEncoderTakeOutput","","",null,null],[5,"BrotliEncoderVersion","","",null,null],[6,"__enum_ty_s","","",null,null],[6,"brotli_alloc_func","","",null,null],[6,"brotli_free_func","","",null,null],[6,"BrotliDecoderResult","","",null,null],[6,"BrotliDecoderErrorCode","","",null,null],[6,"BrotliEncoderMode","","",null,null],[6,"BrotliEncoderParameter","","",null,null],[6,"BrotliEncoderOperation","","",null,null],[17,"BROTLI_DECODER_RESULT_ERROR","","",null,null],[17,"BROTLI_DECODER_RESULT_SUCCESS","","",null,null],[17,"BROTLI_DECODER_RESULT_NEEDS_MORE_INPUT","","",null,null],[17,"BROTLI_DECODER_RESULT_NEEDS_MORE_OUTPUT","","",null,null],[17,"BROTLI_DECODER_NO_ERROR","","",null,null],[17,"BROTLI_DECODER_SUCCESS","","",null,null],[17,"BROTLI_DECODER_NEEDS_MORE_INPUT","","",null,null],[17,"BROTLI_DECODER_NEEDS_MORE_OUTPUT","","",null,null],[17,"BROTLI_DECODER_ERROR_FORMAT_EXUBERANT_NIBBLE","","",null,null],[17,"BROTLI_DECODER_ERROR_FORMAT_RESERVED","","",null,null],[17,"BROTLI_DECODER_ERROR_FORMAT_EXUBERANT_META_NIBBLE","","",null,null],[17,"BROTLI_DECODER_ERROR_FORMAT_SIMPLE_HUFFMAN_ALPHABET","","",null,null],[17,"BROTLI_DECODER_ERROR_FORMAT_SIMPLE_HUFFMAN_SAME","","",null,null],[17,"BROTLI_DECODER_ERROR_FORMAT_CL_SPACE","","",null,null],[17,"BROTLI_DECODER_ERROR_FORMAT_HUFFMAN_SPACE","","",null,null],[17,"BROTLI_DECODER_ERROR_FORMAT_CONTEXT_MAP_REPEAT","","",null,null],[17,"BROTLI_DECODER_ERROR_FORMAT_BLOCK_LENGTH_1","","",null,null],[17,"BROTLI_DECODER_ERROR_FORMAT_BLOCK_LENGTH_2","","",null,null],[17,"BROTLI_DECODER_ERROR_FORMAT_TRANSFORM","","",null,null],[17,"BROTLI_DECODER_ERROR_FORMAT_DICTIONARY","","",null,null],[17,"BROTLI_DECODER_ERROR_FORMAT_WINDOW_BITS","","",null,null],[17,"BROTLI_DECODER_ERROR_FORMAT_PADDING_1","","",null,null],[17,"BROTLI_DECODER_ERROR_FORMAT_PADDING_2","","",null,null],[17,"BROTLI_DECODER_ERROR_INVALID_ARGUMENTS","","",null,null],[17,"BROTLI_DECODER_ERROR_ALLOC_CONTEXT_MODES","","",null,null],[17,"BROTLI_DECODER_ERROR_ALLOC_TREE_GROUPS","","",null,null],[17,"BROTLI_DECODER_ERROR_ALLOC_CONTEXT_MAP","","",null,null],[17,"BROTLI_DECODER_ERROR_ALLOC_RING_BUFFER_1","","",null,null],[17,"BROTLI_DECODER_ERROR_ALLOC_RING_BUFFER_2","","",null,null],[17,"BROTLI_DECODER_ERROR_ALLOC_BLOCK_TYPE_TREES","","",null,null],[17,"BROTLI_DECODER_ERROR_UNREACHABLE","","",null,null],[17,"BROTLI_MODE_GENERIC","","",null,null],[17,"BROTLI_MODE_TEXT","","",null,null],[17,"BROTLI_MODE_FONT","","",null,null],[17,"BROTLI_PARAM_MODE","","",null,null],[17,"BROTLI_PARAM_QUALITY","","",null,null],[17,"BROTLI_PARAM_LGWIN","","",null,null],[17,"BROTLI_PARAM_LGBLOCK","","",null,null],[17,"BROTLI_PARAM_DISABLE_LITERAL_CONTEXT_MODELING","","",null,null],[17,"BROTLI_PARAM_SIZE_HINT","","",null,null],[17,"BROTLI_OPERATION_PROCESS","","",null,null],[17,"BROTLI_OPERATION_FLUSH","","",null,null],[17,"BROTLI_OPERATION_FINISH","","",null,null],[17,"BROTLI_OPERATION_EMIT_METADATA","","",null,null],[17,"BROTLI_DEFAULT_QUALITY","","",null,null],[17,"BROTLI_DEFAULT_WINDOW","","",null,null],[17,"BROTLI_DEFAULT_MODE","","",null,null]],"paths":[]};
initSearch(searchIndex);
